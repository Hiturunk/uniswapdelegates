{"version":3,"sources":["utils.js","SelfDelegate.js","TransitionAlert.js","Address.js","AddressesSum.js","AddressList.js","AddressWrapper.js","GoToAddress.js","SimpleSnackbar.js","App.js","serviceWorker.js","index.js"],"names":["isAddress","address","test","isChecksumAddress","replace","addressHash","keccak256","toLowerCase","i","parseInt","toUpperCase","getDelegatesString","delegates","decimal","Math","pow","millions","thousands","toFixed","SelfDelegate","from","contract","useState","delegate","setDelegate","balance","setBalance","useEffect","methods","call","then","result","balanceOf","Paper","variant","className","indictment","Tooltip","title","to","fontSize","CircularProgress","getDelegateToElement","TransitionAlert","severity","children","React","open","setOpen","Collapse","in","Alert","action","IconButton","aria-label","color","size","onClick","Address","showSnackbar","link","href","alias","ev","text","textArea","document","createElement","style","position","top","left","width","height","padding","border","outline","boxShadow","background","value","body","appendChild","focus","select","execCommand","err","console","error","removeChild","copyToClipboard","getSendProposalElement","getApproveProposalElement","AddressesSum","canApproveProposal","canApprove","Addresslist","list","addresses","setAddresses","a","newAddresses","getCurrentVotes","push","sort","b","sum","reduce","p","c","length","map","key","AddressWrapper","resultAddress","useParams","found","Store","find","valid","AddressList","Button","component","Link","startIcon","GoToAddress","history","useHistory","setError","TextField","onKeyPress","target","onChange","setSelectionRange","id","label","helperText","fullWidth","SimpleSnackbar","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","App","loaded","setLoaded","account","setAccount","chain","setChain","infuraProvider","Web3","providers","HttpProvider","infura","givenProvider","window","ethereum","request","method","accounts","handleAccounts","chainId","catch","enable","log","autoRefreshOnNetworkChange","on","content","connect","code","getProvider","getSelfDelegateElement","Contract","setProvider","UniswapAbi","uniswap","path","getConnectorElement","getProviderElement","networks","1","3","4","5","42","getChainWarningElement","Boolean","location","hostname","match","theme","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0987d7c.chunk.js","sourcesContent":["\nimport { keccak256 } from 'js-sha3'\n\nconst isAddress = function (address) {\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    // check if it has the basic requirements of an address\n    return false\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    // If it's all small caps or all all caps, return true\n    return true\n  } else {\n    // Otherwise check each case\n    return isChecksumAddress(address)\n  }\n}\n\nconst isChecksumAddress = function (address) {\n  // Check each case\n  address = address.replace('0x', '')\n  var addressHash = keccak256(address.toLowerCase())\n  for (var i = 0; i < 40; i++) {\n    // the nth letter should be uppercase if the nth digit of casemap is 1\n    if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nconst getDelegatesString = delegates => {\n  const decimal = delegates / Math.pow(10, 18)\n  const millions = decimal / Math.pow(10, 6)\n  const thousands = decimal / Math.pow(10, 3)\n  if (millions >= 1) {\n    return millions.toFixed(2) + 'M'\n  }\n  else if (thousands >= 1) {\n    return thousands.toFixed(2) + 'K'\n  }\n  else {\n    return decimal.toFixed(2)\n  }\n}\n\nconst copyToClipboard = text => {\n  const textArea = document.createElement('textarea')\n  // Place in top-left corner of screen regardless of scroll position.\n  textArea.style.position = 'fixed'\n  textArea.style.top = 0\n  textArea.style.left = 0\n  textArea.style.width = '2em'\n  textArea.style.height = '2em'\n  textArea.style.padding = 0\n  textArea.style.border = 'none'\n  textArea.style.outline = 'none'\n  textArea.style.boxShadow = 'none'\n  textArea.style.background = 'transparent'\n\n  textArea.value = text\n\n  document.body.appendChild(textArea)\n  textArea.focus()\n  textArea.select()\n\n  let result = false\n\n  try {\n    document.execCommand('copy')\n    result = true\n  } catch (err) {\n    console.error(err)\n  }\n\n  document.body.removeChild(textArea)\n  return result\n}\n\n\n\nexport { isAddress, getDelegatesString, copyToClipboard }\n","import React, { useState, useEffect } from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Paper from '@material-ui/core/Paper'\nimport './App.css'\nimport { getDelegatesString } from './utils'\nimport { Link } from 'react-router-dom'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LinkIcon from '@material-ui/icons/Link'\n\nfunction SelfDelegate({ from, address, contract }) {\n  const [delegate, setDelegate] = useState(null)\n  const [balance, setBalance] = useState(0)\n\n\n  useEffect(() => {\n    contract.methods.delegates(address).call({ from })\n      .then(result => {\n        setDelegate(result)\n      })\n    contract.methods.balanceOf(address).call({ from })\n      .then(result => {\n        setBalance(parseInt(result))\n      })\n  }, [address, contract.methods, from])\n\n  const getDelegateToElement = () => {\n    if (delegate) {\n      let indictment = ['The address is', 'The address has', 'itself']\n\n      if (address === from) {\n        indictment = ['You are', 'You have', 'yourself']\n      }\n\n      if(balance === 0) {\n        return <div>{indictment[1]} no UNI to delegate</div>\n      }\n      else if (delegate.toLowerCase() === address.toLowerCase()) {\n        return <div>{indictment[0]} delegating {getDelegatesString(balance)} UNI to <Tooltip title=\"Permalink\"><Link to={`/address/${delegate}`}>{indictment[2]} <LinkIcon fontSize=\"inherit\" /></Link></Tooltip></div>\n      }\n      else if (delegate === '0x0000000000000000000000000000000000000000') {\n        return <div>{indictment[0]} not delegating the {getDelegatesString(balance)} UNI</div>\n      }\n      else {\n        return <div>{indictment[0]} delegating {getDelegatesString(balance)} UNI to <Tooltip title=\"Permalink\"><Link to={`/address/${delegate}`}>{delegate} <LinkIcon fontSize=\"inherit\" /></Link></Tooltip></div>\n      }\n    }\n    else {\n      return <CircularProgress />\n    }\n  }\n\n  return <Paper variant=\"outlined\" className=\"innerdiv\">\n    {getDelegateToElement()}\n  </Paper>\n}\n\nexport default SelfDelegate\n","import React from 'react'\nimport Alert from '@material-ui/lab/Alert'\nimport IconButton from '@material-ui/core/IconButton'\nimport Collapse from '@material-ui/core/Collapse'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default function TransitionAlert({ severity, children }) {\n  const [open, setOpen] = React.useState(true)\n\n  return (\n    <Collapse in={open} className=\"alert\">\n      <Alert\n        severity={severity}\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              setOpen(false)\n            }}\n          >\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }\n      >\n        {children}\n      </Alert>\n    </Collapse>\n  )\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport ExternalLinkIcon from '@material-ui/icons/Launch'\nimport CopyIcon from '@material-ui/icons/FileCopy'\nimport LinkIcon from '@material-ui/icons/Link'\nimport DoneIcon from '@material-ui/icons/Done'\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\nimport { Link } from 'react-router-dom'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './App.css'\nimport { getDelegatesString, copyToClipboard, isAddress } from './utils'\n\nfunction Address({ address, showSnackbar }) {\n  const valid = isAddress(address.address)\n\n  const getAliasElement = () => {\n    if (address.link) {\n      return <div>Alias: <Tooltip title=\"Alias source\"><a href={address.link}>{address.alias} <ExternalLinkIcon fontSize=\"inherit\" /></a></Tooltip></div>\n    }\n    else {\n      return <div>Alias: {address.alias}</div>\n    }\n  }\n\n  const handleCopyClick = ev => {\n    copyToClipboard(address.address)\n    showSnackbar()\n  }\n\n  const getSendProposalElement = () => {\n    if (address.delegates > Math.pow(10, 25)) {\n      return <Tooltip title=\"Can submit proposals\"><DoneIcon fontSize=\"inherit\" /></Tooltip>\n    }\n  }\n\n  const getApproveProposalElement = () => {\n    if (address.delegates > Math.pow(40, 25)) {\n      return <Tooltip title=\"Can approve proposal\"><DoneAllIcon fontSize=\"inherit\" /></Tooltip>\n    }\n  }\n\n  if (valid) {\n    return <Paper variant=\"outlined\" className=\"innerdiv relative\">\n      {getAliasElement()}\n      <div>\n        Address: <Tooltip title=\"Permalink\"><Link to={`/address/${address.address}`}>{address.address} <LinkIcon fontSize=\"inherit\" /></Link></Tooltip>\n        <Tooltip title=\"Etherscan\"><a href={`https://etherscan.io/address/${address.address}`}><ExternalLinkIcon fontSize=\"inherit\" className=\"spacingleft\" /></a></Tooltip>\n        <Tooltip title=\"Copy to clipboard\"><CopyIcon onClick={handleCopyClick} fontSize=\"inherit\" className=\"spacingleft pointer\" /></Tooltip>\n      </div>\n      <div>Delegates: {getDelegatesString(address.delegates)} {getSendProposalElement()} {getApproveProposalElement()}</div>\n    </Paper>\n  }\n  else {\n    return <Paper variant=\"outlined\" className=\"innerdiv\">\n      Input {address.address} is not a valid address.\n    </Paper>\n  }\n}\n\nexport default Address\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown'\nimport { getDelegatesString } from './utils'\n\nconst AddressesSum = ({ delegates }) => {\n\n  const canApproveProposal = (delegates) => {\n    return delegates > Math.pow(40, 25)\n  }\n\n  const canApprove = canApproveProposal(delegates)\n\n  const getApproveIconElement = () => {\n    if(canApprove) {\n      return <ThumbUpIcon fontSize=\"inherit\" className=\"spacingright\" />\n    }\n    else {\n      return <ThumbDownIcon fontSize=\"inherit\" className=\"spacingright\" />\n    }\n  }\n\n  return <Paper variant=\"outlined\" className=\"innerdiv centerflex\">\n    {getApproveIconElement()}\n    The addresses below sum up to {getDelegatesString(delegates)} delegates and\n    {canApproveProposal(delegates) ? ' can approve a proposal' : ' can not approve a proposal'}\n  </Paper>\n}\n\nexport default AddressesSum\n","import React, { useState, useEffect } from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Address from './Address'\nimport AddressesSum from './AddressesSum'\nimport { isAddress } from './utils'\n\nconst Addresslist = ({ list, from, contract, showSnackbar }) => {\n  const [addresses, setAddresses] = useState(null)\n\n  useEffect(() => {\n    const getCurrentVotes = async () => {\n      const newAddresses = []\n      for (const address of list) {\n        const valid = isAddress(address.address)\n        if (valid) {\n          const result = parseInt(await contract.methods.getCurrentVotes(address.address).call({ from }))\n          newAddresses.push({ ...address, delegates: result })\n        }\n        else {\n          newAddresses.push(address)\n        }\n      }\n\n      newAddresses.sort((a, b) => b.delegates - a.delegates)\n      setAddresses(newAddresses)\n    }\n    getCurrentVotes()\n  }, [contract.methods, from, list])\n\n\n  if (addresses) {\n    const sum = addresses.reduce((p, c) => ({ delegates: p.delegates + c.delegates }), { delegates: 0 }).delegates\n    return <>\n      {addresses.length > 1 && <AddressesSum delegates={sum} />}\n      {addresses.map(a => <Address key={a.address} address={a} showSnackbar={showSnackbar} />)}\n    </>\n  }\n  else {\n    return <CircularProgress />\n  }\n}\n\nexport default Addresslist\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport HomeIcon from '@material-ui/icons/Home'\nimport { Link } from 'react-router-dom'\nimport AddressList from './AddressList'\nimport SelfDelegate from './SelfDelegate'\nimport Store from './store.json'\nimport { isAddress } from './utils'\n\nconst AddressWrapper = ({ from, contract, showSnackbar }) => {\n  const { address } = useParams()\n\n  const found = Store.addresses.find(a => a.address.toLowerCase() === address.toLowerCase())\n  let resultAddress\n\n  if (found) {\n    resultAddress = found\n  }\n  else {\n    resultAddress = {\n      alias: '<Unknown>',\n      address: address\n    }\n  }\n  const valid = isAddress(resultAddress.address)\n\n  const getHomeElement = () => <div className=\"buttonbotdiv\">\n    <Button variant=\"outlined\" color=\"primary\" component={Link} to={'/'} startIcon={<HomeIcon fontSize=\"inherit\" color=\"primary\" />}>Go home</Button>\n  </div>\n\n  return <>\n    { valid ? <SelfDelegate from={from} address={resultAddress.address} contract={contract} /> : null}\n    <AddressList list={[resultAddress]} from={from} contract={contract} showSnackbar={showSnackbar} />\n    {getHomeElement()}\n  </>\n}\n\nexport default AddressWrapper\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { useHistory } from 'react-router-dom'\nimport { isAddress } from './utils'\n\nconst GoToAddress = () => {\n  const history = useHistory()\n\n  const [error, setError] = useState('')\n\n  const handleKeyEvent = ev => {\n    if (ev.key === 'Enter') {\n      history.push(`/address/${ev.target.value}`)\n    }\n  }\n\n  const handleChange = ev => {\n    if (isAddress(ev.target.value)) {\n      setError('')\n    }\n    else {\n      setError('Invalid address')\n    }\n  }\n\n  const handleClick = ev => {\n    ev.target.setSelectionRange(0, ev.target.value.length)\n  }\n\n  return <div className=\"gotodiv\">\n    <TextField onKeyPress={handleKeyEvent} onChange={handleChange} onClick={handleClick} id=\"outlined-basic\" label=\"Address\" variant=\"outlined\" error={error.length > 0} helperText={error} fullWidth />\n  </div>\n}\n\nexport default GoToAddress\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default function SimpleSnackbar({ open, setOpen }) {\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        message=\"Copied to clipboard\"\n        action={\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n      />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Web3 from 'web3'\nimport Contract from 'web3-eth-contract'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Button from '@material-ui/core/Button'\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport ExternalLinkIcon from '@material-ui/icons/Launch'\nimport LockIcon from '@material-ui/icons/Lock'\nimport ConnectIcon from '@material-ui/icons/SettingsInputComponent'\nimport './App.css'\nimport SelfDelegate from './SelfDelegate'\nimport TransitionAlert from './TransitionAlert'\nimport AddressWrapper from './AddressWrapper'\nimport AddressList from './AddressList'\nimport GoToAddress from './GoToAddress'\nimport Store from './store.json'\nimport UniswapAbi from './uniswapabi.json'\nimport SimpleSnackbar from './SimpleSnackbar'\n\nfunction App() {\n  const [loaded, setLoaded] = useState(false)\n  const [account, setAccount] = useState(null)\n  const [chain, setChain] = useState(1)\n  const [open, setOpen] = useState(false)\n  const infuraProvider = new Web3.providers.HttpProvider(`https://mainnet.infura.io/v3/${Store.infura}`)\n  const givenProvider = Web3.givenProvider\n\n  useEffect(() => {\n    const enable = async () => {\n      if (givenProvider) {\n        window.ethereum\n          .request({ method: 'eth_accounts' })\n          .then(accounts => {\n            handleAccounts(accounts)\n            setChain(window.ethereum.chainId)\n            setLoaded(true)\n          })\n          .catch((err) => {\n            console.error(err)\n          })\n      }\n      else {\n        setLoaded(true)\n      }\n    }\n    enable()\n  }, [givenProvider])\n\n\n  const handleAccounts = (accounts) => {\n    if (accounts.length === 0) {\n      console.log('Please connect to MetaMask.')\n    }\n    else {\n      setAccount(accounts[0])\n    }\n  }\n\n  if (window.ethereum) {\n    window.ethereum.autoRefreshOnNetworkChange = false\n    window.ethereum.on('accountsChanged', handleAccounts)\n  }\n\n  const connect = () => {\n    window.ethereum\n      .request({ method: 'eth_requestAccounts' })\n      .then((accounts) => {\n        handleAccounts(accounts)\n      })\n      .catch((err) => {\n        if (err.code === 4001) {\n          console.log('Please connect to MetaMask.')\n        } else {\n          console.error(err)\n        }\n      })\n  }\n\n  const getLoadingElement = () => <CircularProgress />\n\n  const getNoAccountElement = () => <div className=\"buttondiv\">\n    <Button variant=\"outlined\" color=\"primary\" onClick={connect} startIcon={<ConnectIcon fontSize=\"inherit\" color=\"primary\" />}>Connect you account</Button>\n  </div>\n\n  const getProviderElement = (contract) => <AddressList list={Store.addresses} from={account} contract={contract} showSnackbar={() => setOpen(true)} />\n\n  const getChainWarningElement = () => {\n    const id = parseInt(chain)\n\n    const networks = {\n      1: 'Ethereum Main Network',\n      3: 'Ropsten Test Network',\n      4: 'Rinkeby Test Network',\n      5: 'Goerli Test Network',\n      42: 'Kovan Test Network'\n    }\n\n    if (id !== 1 && getProvider() === givenProvider) {\n      if (id in networks) {\n        return <TransitionAlert severity=\"info\">You are on the {networks[id]}</TransitionAlert>\n      }\n      else {\n        return <TransitionAlert severity=\"info\">You are not on the Ethereum Main Network</TransitionAlert>\n      }\n    }\n  }\n\n  const getProvider = () => {\n    if (account) {\n      return givenProvider\n    }\n    else {\n      return infuraProvider\n    }\n  }\n\n  const getConnectorElement = (contract) => {\n    if(account) {\n      return getSelfDelegateElement(contract)\n    }\n    else {\n      if(givenProvider) {\n        return getNoAccountElement()\n      }\n    }\n  }\n\n  const getSpaghettiElement = () => <TransitionAlert severity=\"warning\">This is spaghetti code. Use at your own risk.</TransitionAlert>\n\n  const getSelfDelegateElement = (contract) => <SelfDelegate from={account} address={account} contract={contract} />\n\n  const getDuneAnalyticsElement = () => <TransitionAlert severity=\"info\">Check out <a href=\"https://explore.duneanalytics.com/dashboard/uniswap-governance\">Dune Analytics Uniswap Governance dashboard <ExternalLinkIcon fontSize=\"inherit\" /><LockIcon fontSize=\"inherit\" /></a> for a more complete view.</TransitionAlert>\n\n  const getUniswapVoteElement = () => <TransitionAlert severity=\"info\">Go to <a href=\"https://app.uniswap.org/#/vote\">Uniswap Vote <ExternalLinkIcon fontSize=\"inherit\" /></a> to delegate your UNI.</TransitionAlert>\n\n  const getEtherScanContractElement = () => <TransitionAlert severity=\"info\">Check out the <a href=\"https://etherscan.io/address/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984#readContract\">Uniswap contract on Etherscan <ExternalLinkIcon fontSize=\"inherit\" /></a> to run the queries yourself.</TransitionAlert>\n\n  const getCreditsElement = () => <TransitionAlert severity=\"info\">Unicorn icon made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik <ExternalLinkIcon fontSize=\"inherit\" /></a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">Flaticon <ExternalLinkIcon fontSize=\"inherit\" /></a>.</TransitionAlert>\n\n  let content\n\n  if (!loaded) {\n    content = getLoadingElement()\n  }\n  else {\n    Contract.setProvider(getProvider())\n    const contract = new Contract(UniswapAbi, Store.uniswap)\n\n    content = <Switch>\n      <Route path=\"/address/:address\">\n        <AddressWrapper from={account} contract={contract} showSnackbar={() => setOpen(true)} />\n      </Route>\n      <Route path=\"/\">\n        {getConnectorElement(contract)}\n        <GoToAddress />\n        {getProviderElement(contract)}\n      </Route>\n    </Switch>\n  }\n\n  return (\n    <div className=\"outerdiv\">\n      {getSpaghettiElement()}\n      {getChainWarningElement()}\n      {content}\n      {getUniswapVoteElement()}\n      {getDuneAnalyticsElement()}\n      {getEtherScanContractElement()}\n      {getCreditsElement()}\n      <SimpleSnackbar open={open} setOpen={setOpen} />\n    </div>)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#D392D8'\n    },\n    secondary: {\n      main: '#E8C2D8'\n    }\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <Router>\n        <App />\n      </Router>\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}