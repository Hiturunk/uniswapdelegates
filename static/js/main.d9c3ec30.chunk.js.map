{"version":3,"sources":["utils.js","SelfDelegate.js","TransitionAlert.js","Address.js","AddressWrapper.js","GoToAddress.js","SimpleSnackbar.js","App.js","serviceWorker.js","index.js"],"names":["isAddress","address","test","isChecksumAddress","replace","addressHash","keccak256","toLowerCase","i","parseInt","toUpperCase","getDelegatesString","delegates","decimal","Math","pow","millions","thousands","toFixed","SelfDelegate","from","contract","useState","delegate","setDelegate","balance","setBalance","useEffect","methods","call","then","result","balanceOf","Paper","variant","className","indictment","Tooltip","title","to","fontSize","getDelegateToElement","TransitionAlert","severity","children","React","open","setOpen","Collapse","in","Alert","action","IconButton","aria-label","color","size","onClick","Address","showSnackbar","setDelegates","valid","getCurrentVotes","catch","err","console","error","link","href","alias","ev","text","textArea","document","createElement","style","position","top","left","width","height","padding","border","outline","boxShadow","background","value","body","appendChild","focus","select","execCommand","removeChild","copyToClipboard","AddressWrapper","resultAddress","useParams","found","Store","addresses","find","a","GoToAddress","history","useHistory","setError","TextField","onKeyPress","key","push","target","onChange","setSelectionRange","length","id","label","helperText","fullWidth","SimpleSnackbar","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","App","loaded","setLoaded","account","setAccount","chain","setChain","provider","Web3","givenProvider","window","ethereum","request","method","accounts","handleAccounts","chainId","enable","log","autoRefreshOnNetworkChange","on","content","connect","code","Contract","setProvider","UniswapAbi","uniswap","path","getSelfDelegateElement","map","getProviderElement","Button","networks","1","3","4","5","42","getChainWarningElement","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9c3ec30.chunk.js","sourcesContent":["\nimport { keccak256 } from 'js-sha3';\n\nconst isAddress = function (address) {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\nconst isChecksumAddress = function (address) {\n    // Check each case\n    address = address.replace('0x', '');\n    var addressHash = keccak256(address.toLowerCase());\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\nconst getDelegatesString = delegates => {\n    const decimal = delegates / Math.pow(10, 18);\n    const millions = decimal / Math.pow(10, 6);\n    const thousands = decimal / Math.pow(10, 3);\n    if (millions >= 1) {\n        return millions.toFixed(2) + \"M\";\n    }\n    else if (thousands >= 1) {\n        return thousands.toFixed(2) + \"K\";\n    }\n    else {\n        return decimal.toFixed(2);\n    }\n}\n\nfunction copyToClipboard(text) {\n    var textArea = document.createElement(\"textarea\");\n    // Place in top-left corner of screen regardless of scroll position.\n    textArea.style.position = 'fixed';\n    textArea.style.top = 0;\n    textArea.style.left = 0;\n    textArea.style.width = '2em';\n    textArea.style.height = '2em';\n    textArea.style.padding = 0;\n    textArea.style.border = 'none';\n    textArea.style.outline = 'none';\n    textArea.style.boxShadow = 'none';\n    textArea.style.background = 'transparent';\n\n\n    textArea.value = text;\n\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    try {\n        document.execCommand('copy');\n    } catch (err) {\n        console.error(err);\n    }\n\n    document.body.removeChild(textArea);\n}\n\n\n\nexport { isAddress, getDelegatesString, copyToClipboard }","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport './App.css';\nimport { getDelegatesString } from './utils';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LinkIcon from '@material-ui/icons/Link';\n\nfunction SelfDelegate({ from, address, contract }) {\n    const [delegate, setDelegate] = useState(null);\n    const [balance, setBalance] = useState(0);\n\n    useEffect(() => {\n        contract.methods.delegates(address).call({ from })\n            .then(result => {\n                setDelegate(result);\n            });\n        contract.methods.balanceOf(address).call({ from })\n            .then(result => {\n                setBalance(result);\n            });\n    }, []);\n\n    const getDelegateToElement = () => {\n        if (delegate) {\n            let indictment = [\"The address is\", \"itself\"];\n\n            if (address === from) {\n                indictment = [\"You are\", \"yourself\"]\n            }\n\n            if (delegate.toLowerCase() === address.toLowerCase()) {\n                return <div>{indictment[0]} delegating {getDelegatesString(balance)} UNI to <Tooltip title=\"Permalink\"><Link to={`/address/${delegate}`}>{indictment[1]} <LinkIcon fontSize=\"inherit\" /></Link></Tooltip></div>\n            }\n            else if (delegate === \"0x0000000000000000000000000000000000000000\") {\n                return <div>{indictment[0]} not delegating the {getDelegatesString(balance)} UNI</div>\n            }\n            else {\n                return <div>{indictment[0]} delegating {getDelegatesString(balance)} UNI to <Tooltip title=\"Permalink\"><Link to={`/address/${delegate}`}>{delegate} <LinkIcon fontSize=\"inherit\" /></Link></Tooltip></div>\n            }\n        }\n        else {\n            return <div>Loading...</div>\n        }\n    }\n\n    return <Paper variant=\"outlined\" className=\"innerdiv\">\n        {getDelegateToElement()}\n    </Paper>\n}\n\nexport default SelfDelegate;\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function TransitionAlert({ severity, children }) {\n  const [open, setOpen] = React.useState(true);\n\n  return (\n    <Collapse in={open} className=\"alert\">\n      <Alert\n        severity={severity}\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }\n      >\n        {children}\n      </Alert>\n    </Collapse>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport ExternalLinkIcon from '@material-ui/icons/Launch';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from \"react-router-dom\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './App.css';\nimport { getDelegatesString, copyToClipboard, isAddress } from './utils';\n\nfunction Address({ from, address, contract, showSnackbar }) {\n    const [delegates, setDelegates] = useState(0);\n\n    const valid = isAddress(address.address);\n\n    useEffect(() => {\n        if (valid) {\n            contract.methods.getCurrentVotes(address.address).call({ from })\n                .then(result => {\n                    setDelegates(result);\n                })\n                .catch(err => {\n                    console.error(err);\n                });\n        }\n    }, []);\n\n    const getAliasElement = () => {\n        if (address.link) {\n            return <div>Alias: <Tooltip title=\"Alias source\"><a href={address.link}>{address.alias} <ExternalLinkIcon fontSize=\"inherit\" /></a></Tooltip></div>;\n        }\n        else {\n            return <div>Alias: {address.alias}</div>;\n        }\n    }\n\n    const handleCopyClick = ev => {\n        copyToClipboard(address.address);\n        showSnackbar();\n    }\n\n    if (valid) {\n        return <Paper variant=\"outlined\" className=\"innerdiv relative\">\n            {getAliasElement()}\n            <div>\n                Address: <Tooltip title=\"Permalink\"><Link to={`/address/${address.address}`}>{address.address} <LinkIcon fontSize=\"inherit\" /></Link></Tooltip>\n                <Tooltip title=\"Etherscan\"><a href={`https://etherscan.io/address/${address.address}`}><ExternalLinkIcon fontSize=\"inherit\" className=\"spacingleft\" /></a></Tooltip>\n                <Tooltip title=\"Copy to clipboard\"><CopyIcon onClick={handleCopyClick} fontSize=\"inherit\" className=\"spacingleft pointer\" /></Tooltip>\n            </div>\n            <div>Delegates: {getDelegatesString(delegates)}</div>\n        </Paper>\n    }\n    else {\n        return <Paper variant=\"outlined\" className=\"innerdiv\">\n            Input {address.address} is not a valid address.\n        </Paper>\n    }\n}\n\nexport default Address;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Address from './Address';\nimport SelfDelegate from './SelfDelegate';\nimport Store from './store.json';\n\nconst AddressWrapper = ({ from, contract }) => {\n    const { address } = useParams();\n\n    const found = Store.addresses.find(a => a.address.toLowerCase() === address.toLowerCase());\n    let resultAddress;\n\n    if (found) {\n        resultAddress = found;\n    }\n    else {\n        resultAddress = {\n            alias: \"<Unknown>\",\n            address: address\n        }\n    }\n\n    return <>\n        <SelfDelegate from={from} address={resultAddress.address} contract={contract} />\n        <Address from={from} address={resultAddress} contract={contract} />\n    </>\n}\n\nexport default AddressWrapper;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\nimport { isAddress } from './utils';\n\nconst GoToAddress = () => {\n    const history = useHistory();\n\n    const [error, setError] = useState(\"\");\n\n    const handleKeyEvent = ev => {\n        if (ev.key === 'Enter') {\n            history.push(`/address/${ev.target.value}`)\n        }\n    }\n\n    const handleChange = ev => {\n        if (isAddress(ev.target.value)) {\n            setError(\"\")\n        }\n        else {\n            setError(\"Invalid address\")\n        }\n    }\n\n    const handleClick = ev => {\n        ev.target.setSelectionRange(0, ev.target.value.length)\n    }\n\n    return <div className=\"gotodiv\">\n        <TextField onKeyPress={handleKeyEvent} onChange={handleChange} onClick={handleClick} id=\"outlined-basic\" label=\"Address\" variant=\"outlined\" error={error.length > 0} helperText={error} fullWidth />\n    </div>;\n}\n\nexport default GoToAddress","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function SimpleSnackbar({ open, setOpen }) {\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n                message=\"Copied to clipboard\"\n                action={\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                }\n            />\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport Contract from 'web3-eth-contract';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport SelfDelegate from './SelfDelegate';\nimport TransitionAlert from './TransitionAlert';\nimport AddressWrapper from './AddressWrapper';\nimport Address from './Address';\nimport GoToAddress from './GoToAddress';\nimport Store from './store.json';\nimport UniswapAbi from './uniswapabi.json';\nimport SimpleSnackbar from './SimpleSnackbar';\n\nfunction App() {\n  const [loaded, setLoaded] = useState(false);\n  const [account, setAccount] = useState(null);\n  const [chain, setChain] = useState(1);\n  const [open, setOpen] = useState(false);\n  const provider = Web3.givenProvider;\n\n  useEffect(() => {\n    const enable = async () => {\n      if (provider) {\n        window.ethereum\n          .request({ method: 'eth_accounts' })\n          .then(accounts => {\n            handleAccounts(accounts);\n            setChain(window.ethereum.chainId);\n            setLoaded(true);\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }\n    }\n    enable();\n  }, []);\n\n\n  const handleAccounts = (accounts) => {\n    if (accounts.length === 0) {\n      console.log('Please connect to MetaMask.');\n    }\n    else {\n      setAccount(accounts[0]);\n    }\n  };\n\n  if (window.ethereum) {\n    window.ethereum.autoRefreshOnNetworkChange = false;\n    window.ethereum.on('accountsChanged', handleAccounts);\n  }\n\n  const connect = () => {\n    window.ethereum\n      .request({ method: 'eth_requestAccounts' })\n      .then((accounts) => {\n        handleAccounts(accounts);\n      })\n      .catch((err) => {\n        if (err.code === 4001) {\n          console.log('Please connect to MetaMask.');\n        } else {\n          console.error(err);\n        }\n      });\n  }\n\n  const getLoadingElement = () => <Paper variant=\"outlined\" className=\"innerdiv\">Loading...</Paper>;\n\n  const getNoProviderElement = () => <Paper variant=\"outlined\" className=\"innerdiv\">No Web3 provider found. Do you have MetaMask?</Paper>;\n\n  const getNoAccountElement = () => <div className=\"buttondiv\">\n    <Button variant=\"contained\" color=\"primary\" onClick={connect}>Connect you account</Button>\n  </div>\n\n  const getProviderElement = (contract) => Store.addresses.map(a => <Address key={a.address} from={account} address={a} contract={contract} showSnackbar={() => setOpen(true)} />);\n\n  const getChainWarningElement = () => {\n    const id = parseInt(chain);\n\n    const networks = {\n      1: 'Ethereum Main Network',\n      3: 'Ropsten Test Network',\n      4: 'Rinkeby Test Network',\n      5: 'Goerli Test Network',\n      42: 'Kovan Test Network'\n    };\n\n    if (id !== 1) {\n      if (id in networks) {\n        return <TransitionAlert severity=\"info\">You are on the {networks[id]}</TransitionAlert>\n      }\n      else {\n        return <TransitionAlert severity=\"info\">You are not on the Ethereum Main Network</TransitionAlert>\n      }\n    }\n  }\n\n  const getSelfDelegateElement = (contract) => <SelfDelegate from={account} address={account} contract={contract} />\n\n  const getDuneAnalyticsElement = () => <TransitionAlert severity=\"info\">Check out <a href=\"https://explore.duneanalytics.com/dashboard/uniswap-governance\">Dune Analytics Uniswap Governance dashboard</a> for a more complete view.</TransitionAlert>\n\n  const getUniswapVoteElement = () => <TransitionAlert severity=\"info\">Go to <a href=\"https://app.uniswap.org/#/vote\">Uniswap Vote</a> to delegate your UNI.</TransitionAlert>\n\n  const getEtherScanContractElement = () => <TransitionAlert severity=\"info\">Check out the <a href=\"https://etherscan.io/address/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984#readContract\">Uniswap contract on Etherscan</a> to run the queries yourself.</TransitionAlert>\n\n  const getCreditsElement = () => <TransitionAlert severity=\"info\">Favicon made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">Flaticon</a>.</TransitionAlert>\n\n  let content;\n\n  if (provider == null) {\n    content = getNoProviderElement();\n  }\n  else if (!loaded) {\n    content = getLoadingElement();\n  }\n  else if (!account) {\n    content = getNoAccountElement();\n  }\n  else {\n    Contract.setProvider(provider);\n    const contract = new Contract(UniswapAbi, Store.uniswap);\n\n    content = <Switch>\n      <Route path=\"/address/:address\">\n        <AddressWrapper from={account} contract={contract} />\n      </Route>\n      <Route path=\"/\">\n        {getSelfDelegateElement(contract)}\n        <GoToAddress />\n        {getProviderElement(contract)}\n      </Route>\n    </Switch>;\n  }\n\n  return <div className=\"outerdiv\">\n    <TransitionAlert severity=\"warning\">This is spaghetti code. Use at your own risk.</TransitionAlert>\n    {getChainWarningElement()}\n    {content}\n    {getUniswapVoteElement()}\n    {getDuneAnalyticsElement()}\n    {getEtherScanContractElement()}\n    {getCreditsElement()}\n    <SimpleSnackbar open={open} setOpen={setOpen} />\n  </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}